<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20223.22.1108.0821                               -->
<workbook original-version='18.1' source-build='2022.3.1 (20223.22.1108.0821)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.Layers.true...Layers />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='cleaned_advertising_data (Qwest-Database)' inline='true' name='federated.17g974r09nl49t0zjg7ov03so0o5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='qwest-final-project.ccngkdwtiuvz.us-east-2.rds.amazonaws.com' name='postgres.1gfybb91vi5p6n17xp1p31ve76h2'>
            <connection authentication='username-password' class='postgres' dbname='Qwest-Database' one-time-sql='' port='5432' server='qwest-final-project.ccngkdwtiuvz.us-east-2.rds.amazonaws.com' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.1gfybb91vi5p6n17xp1p31ve76h2' name='cleaned_advertising_data' table='[public].[cleaned_advertising_data]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='postgres.1gfybb91vi5p6n17xp1p31ve76h2' name='cleaned_advertising_data' table='[public].[cleaned_advertising_data]' type='table' />
          <relation connection='postgres.1gfybb91vi5p6n17xp1p31ve76h2' name='merged_mapping_viewership' table='[public].[merged_mapping_viewership]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[bid_requests]' value='[cleaned_advertising_data].[bid_requests]' />
          <map key='[bid_responses]' value='[cleaned_advertising_data].[bid_responses]' />
          <map key='[bid_wons]' value='[cleaned_advertising_data].[bid_wons]' />
          <map key='[channel (merged_mapping_viewership)]' value='[merged_mapping_viewership].[channel]' />
          <map key='[channel]' value='[cleaned_advertising_data].[channel]' />
          <map key='[country (merged_mapping_viewership)]' value='[merged_mapping_viewership].[country]' />
          <map key='[country]' value='[cleaned_advertising_data].[country]' />
          <map key='[cpm]' value='[cleaned_advertising_data].[cpm]' />
          <map key='[date (merged_mapping_viewership)]' value='[merged_mapping_viewership].[date]' />
          <map key='[date]' value='[cleaned_advertising_data].[date]' />
          <map key='[delivered_pod_duration]' value='[cleaned_advertising_data].[delivered_pod_duration]' />
          <map key='[device_type]' value='[merged_mapping_viewership].[device_type]' />
          <map key='[endpoint_requests]' value='[cleaned_advertising_data].[endpoint_requests]' />
          <map key='[feed_name]' value='[merged_mapping_viewership].[feed_name]' />
          <map key='[filled_pod_droprate]' value='[cleaned_advertising_data].[filled_pod_droprate]' />
          <map key='[filled_pod_duration]' value='[cleaned_advertising_data].[filled_pod_duration]' />
          <map key='[impressions]' value='[cleaned_advertising_data].[impressions]' />
          <map key='[operator (merged_mapping_viewership)]' value='[merged_mapping_viewership].[operator]' />
          <map key='[operator]' value='[cleaned_advertising_data].[operator]' />
          <map key='[pod_fill_rate]' value='[cleaned_advertising_data].[pod_fill_rate]' />
          <map key='[region (merged_mapping_viewership)]' value='[merged_mapping_viewership].[region]' />
          <map key='[region]' value='[cleaned_advertising_data].[region]' />
          <map key='[requested_pod_droprate]' value='[cleaned_advertising_data].[requested_pod_droprate]' />
          <map key='[requested_pod_duration]' value='[cleaned_advertising_data].[requested_pod_duration]' />
          <map key='[revenue]' value='[cleaned_advertising_data].[revenue]' />
          <map key='[session_count]' value='[merged_mapping_viewership].[session_count]' />
          <map key='[total_viewership_seconds]' value='[merged_mapping_viewership].[total_viewership_seconds]' />
          <map key='[unique_viewers]' value='[merged_mapping_viewership].[unique_viewers]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[cleaned_advertising_data]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_advertising_data_436142F9E841466686B4FFBB5D01B000]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[cleaned_advertising_data]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_advertising_data_436142F9E841466686B4FFBB5D01B000]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[cleaned_advertising_data]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_advertising_data_436142F9E841466686B4FFBB5D01B000]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>operator</remote-name>
            <remote-type>129</remote-type>
            <local-name>[operator]</local-name>
            <parent-name>[cleaned_advertising_data]</parent-name>
            <remote-alias>operator</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_advertising_data_436142F9E841466686B4FFBB5D01B000]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>channel</remote-name>
            <remote-type>129</remote-type>
            <local-name>[channel]</local-name>
            <parent-name>[cleaned_advertising_data]</parent-name>
            <remote-alias>channel</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_advertising_data_436142F9E841466686B4FFBB5D01B000]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pod_fill_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pod_fill_rate]</local-name>
            <parent-name>[cleaned_advertising_data]</parent-name>
            <remote-alias>pod_fill_rate</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_advertising_data_436142F9E841466686B4FFBB5D01B000]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>endpoint_requests</remote-name>
            <remote-type>3</remote-type>
            <local-name>[endpoint_requests]</local-name>
            <parent-name>[cleaned_advertising_data]</parent-name>
            <remote-alias>endpoint_requests</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_advertising_data_436142F9E841466686B4FFBB5D01B000]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bid_requests</remote-name>
            <remote-type>3</remote-type>
            <local-name>[bid_requests]</local-name>
            <parent-name>[cleaned_advertising_data]</parent-name>
            <remote-alias>bid_requests</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_advertising_data_436142F9E841466686B4FFBB5D01B000]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bid_responses</remote-name>
            <remote-type>3</remote-type>
            <local-name>[bid_responses]</local-name>
            <parent-name>[cleaned_advertising_data]</parent-name>
            <remote-alias>bid_responses</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_advertising_data_436142F9E841466686B4FFBB5D01B000]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bid_wons</remote-name>
            <remote-type>3</remote-type>
            <local-name>[bid_wons]</local-name>
            <parent-name>[cleaned_advertising_data]</parent-name>
            <remote-alias>bid_wons</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_advertising_data_436142F9E841466686B4FFBB5D01B000]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>impressions</remote-name>
            <remote-type>3</remote-type>
            <local-name>[impressions]</local-name>
            <parent-name>[cleaned_advertising_data]</parent-name>
            <remote-alias>impressions</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_advertising_data_436142F9E841466686B4FFBB5D01B000]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>revenue</remote-name>
            <remote-type>5</remote-type>
            <local-name>[revenue]</local-name>
            <parent-name>[cleaned_advertising_data]</parent-name>
            <remote-alias>revenue</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_advertising_data_436142F9E841466686B4FFBB5D01B000]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cpm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cpm]</local-name>
            <parent-name>[cleaned_advertising_data]</parent-name>
            <remote-alias>cpm</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_advertising_data_436142F9E841466686B4FFBB5D01B000]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>requested_pod_duration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[requested_pod_duration]</local-name>
            <parent-name>[cleaned_advertising_data]</parent-name>
            <remote-alias>requested_pod_duration</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_advertising_data_436142F9E841466686B4FFBB5D01B000]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>requested_pod_droprate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[requested_pod_droprate]</local-name>
            <parent-name>[cleaned_advertising_data]</parent-name>
            <remote-alias>requested_pod_droprate</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_advertising_data_436142F9E841466686B4FFBB5D01B000]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>filled_pod_duration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[filled_pod_duration]</local-name>
            <parent-name>[cleaned_advertising_data]</parent-name>
            <remote-alias>filled_pod_duration</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_advertising_data_436142F9E841466686B4FFBB5D01B000]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>filled_pod_droprate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[filled_pod_droprate]</local-name>
            <parent-name>[cleaned_advertising_data]</parent-name>
            <remote-alias>filled_pod_droprate</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_advertising_data_436142F9E841466686B4FFBB5D01B000]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>delivered_pod_duration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[delivered_pod_duration]</local-name>
            <parent-name>[cleaned_advertising_data]</parent-name>
            <remote-alias>delivered_pod_duration</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_advertising_data_436142F9E841466686B4FFBB5D01B000]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date (merged_mapping_viewership)]</local-name>
            <parent-name>[merged_mapping_viewership]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>20</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged_mapping_viewership_24E816929DDF4EEA8550D9609C14AD96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>feed_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[feed_name]</local-name>
            <parent-name>[merged_mapping_viewership]</parent-name>
            <remote-alias>feed_name</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged_mapping_viewership_24E816929DDF4EEA8550D9609C14AD96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country (merged_mapping_viewership)]</local-name>
            <parent-name>[merged_mapping_viewership]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged_mapping_viewership_24E816929DDF4EEA8550D9609C14AD96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>device_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[device_type]</local-name>
            <parent-name>[merged_mapping_viewership]</parent-name>
            <remote-alias>device_type</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged_mapping_viewership_24E816929DDF4EEA8550D9609C14AD96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>session_count</remote-name>
            <remote-type>3</remote-type>
            <local-name>[session_count]</local-name>
            <parent-name>[merged_mapping_viewership]</parent-name>
            <remote-alias>session_count</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged_mapping_viewership_24E816929DDF4EEA8550D9609C14AD96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_viewership_seconds</remote-name>
            <remote-type>3</remote-type>
            <local-name>[total_viewership_seconds]</local-name>
            <parent-name>[merged_mapping_viewership]</parent-name>
            <remote-alias>total_viewership_seconds</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged_mapping_viewership_24E816929DDF4EEA8550D9609C14AD96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unique_viewers</remote-name>
            <remote-type>3</remote-type>
            <local-name>[unique_viewers]</local-name>
            <parent-name>[merged_mapping_viewership]</parent-name>
            <remote-alias>unique_viewers</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged_mapping_viewership_24E816929DDF4EEA8550D9609C14AD96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region (merged_mapping_viewership)]</local-name>
            <parent-name>[merged_mapping_viewership]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged_mapping_viewership_24E816929DDF4EEA8550D9609C14AD96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>channel</remote-name>
            <remote-type>129</remote-type>
            <local-name>[channel (merged_mapping_viewership)]</local-name>
            <parent-name>[merged_mapping_viewership]</parent-name>
            <remote-alias>channel</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged_mapping_viewership_24E816929DDF4EEA8550D9609C14AD96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>operator</remote-name>
            <remote-type>129</remote-type>
            <local-name>[operator (merged_mapping_viewership)]</local-name>
            <parent-name>[merged_mapping_viewership]</parent-name>
            <remote-alias>operator</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged_mapping_viewership_24E816929DDF4EEA8550D9609C14AD96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Viewership Hours' datatype='real' name='[Calculation_1439181592454574080]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[total_viewership_seconds] / 3600' />
      </column>
      <column caption='Filled Pod / Requested' datatype='real' name='[Calculation_1660983874431299584]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='&apos;Filled Pod Duration&apos; \ &apos;Requested Pod Duration&apos;' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='cleaned_advertising_data' datatype='table' name='[__tableau_internal_object_id__].[cleaned_advertising_data_436142F9E841466686B4FFBB5D01B000]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='merged_mapping_viewership' datatype='table' name='[__tableau_internal_object_id__].[merged_mapping_viewership_24E816929DDF4EEA8550D9609C14AD96]' role='measure' type='quantitative' />
      <column caption='Bid Requests' datatype='integer' name='[bid_requests]' role='measure' type='quantitative' />
      <column caption='Bid Responses' datatype='integer' name='[bid_responses]' role='measure' type='quantitative' />
      <column caption='Bid Wons' datatype='integer' name='[bid_wons]' role='measure' type='quantitative' />
      <column caption='Channel (Merged Mapping Viewership)' datatype='string' name='[channel (merged_mapping_viewership)]' role='dimension' type='nominal' />
      <column caption='Channel' datatype='string' name='[channel]' role='dimension' type='nominal' />
      <column caption='Country (Merged Mapping Viewership)' datatype='string' name='[country (merged_mapping_viewership)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Cpm' datatype='real' name='[cpm]' role='measure' type='quantitative' />
      <column caption='Date (Merged Mapping Viewership)' datatype='date' name='[date (merged_mapping_viewership)]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
      <column caption='Delivered Pod Duration' datatype='real' name='[delivered_pod_duration]' role='measure' type='quantitative' />
      <column caption='Device Type' datatype='string' name='[device_type]' role='dimension' type='nominal' />
      <column caption='Endpoint Requests' datatype='integer' name='[endpoint_requests]' role='measure' type='quantitative' />
      <column caption='Feed Name' datatype='string' name='[feed_name]' role='dimension' type='nominal' />
      <column caption='Filled Pod Droprate' datatype='real' name='[filled_pod_droprate]' role='measure' type='quantitative' />
      <column caption='Filled Pod Duration' datatype='real' name='[filled_pod_duration]' role='measure' type='quantitative' />
      <column caption='Impressions' datatype='integer' name='[impressions]' role='measure' type='quantitative' />
      <column caption='Operator (Merged Mapping Viewership)' datatype='string' name='[operator (merged_mapping_viewership)]' role='dimension' type='nominal' />
      <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
      <column caption='Pod Fill Rate' datatype='real' name='[pod_fill_rate]' role='measure' type='quantitative' />
      <column caption='Region (Merged Mapping Viewership)' datatype='string' name='[region (merged_mapping_viewership)]' role='dimension' type='nominal' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <column caption='Requested Pod Droprate' datatype='real' name='[requested_pod_droprate]' role='measure' type='quantitative' />
      <column caption='Requested Pod Duration' datatype='real' name='[requested_pod_duration]' role='measure' type='quantitative' />
      <column caption='Revenue' datatype='real' name='[revenue]' role='measure' type='quantitative' />
      <column caption='Session Count' datatype='integer' name='[session_count]' role='measure' type='quantitative' />
      <column caption='Total Viewership Seconds' datatype='integer' name='[total_viewership_seconds]' role='dimension' type='ordinal' />
      <column caption='Unique Viewers' datatype='integer' name='[unique_viewers]' role='measure' type='quantitative' />
      <column-instance column='[channel]' derivation='None' name='[none:channel:nk]' pivot='key' type='nominal' />
      <column-instance column='[country (merged_mapping_viewership)]' derivation='None' name='[none:country (merged_mapping_viewership):nk]' pivot='key' type='nominal' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[region (merged_mapping_viewership)]' derivation='None' name='[none:region (merged_mapping_viewership):nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:channel:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Channel_001&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>%null%</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Unknown&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Channel_003&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Channel_002&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:region (merged_mapping_viewership):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:country (merged_mapping_viewership):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Barthlemy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hashemite Kingdom of Jordan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Federated States of Micronesia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St Vincent and Grenadines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DR Congo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;land&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norfolk Island&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;So Tom and Prncipe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Republic of Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;land Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Runion&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Timor&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;U.S. Virgin Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Curaao&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Principality of Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vatican City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Christmas Island&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aland Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Congo Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bonaire, Saint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wallis and Futuna Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St. Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DR Congo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint-Martin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='date' />
        <field-sort-custom-order field='country' />
        <field-sort-custom-order field='region' />
        <field-sort-custom-order field='operator' />
        <field-sort-custom-order field='channel' />
        <field-sort-custom-order field='pod_fill_rate' />
        <field-sort-custom-order field='endpoint_requests' />
        <field-sort-custom-order field='bid_requests' />
        <field-sort-custom-order field='bid_responses' />
        <field-sort-custom-order field='bid_wons' />
        <field-sort-custom-order field='impressions' />
        <field-sort-custom-order field='revenue' />
        <field-sort-custom-order field='cpm' />
        <field-sort-custom-order field='requested_pod_duration' />
        <field-sort-custom-order field='requested_pod_droprate' />
        <field-sort-custom-order field='filled_pod_duration' />
        <field-sort-custom-order field='filled_pod_droprate' />
        <field-sort-custom-order field='delivered_pod_duration' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cleaned_advertising_data' id='cleaned_advertising_data_436142F9E841466686B4FFBB5D01B000'>
            <properties context=''>
              <relation connection='postgres.1gfybb91vi5p6n17xp1p31ve76h2' name='cleaned_advertising_data' table='[public].[cleaned_advertising_data]' type='table' />
            </properties>
          </object>
          <object caption='merged_mapping_viewership' id='merged_mapping_viewership_24E816929DDF4EEA8550D9609C14AD96'>
            <properties context=''>
              <relation connection='postgres.1gfybb91vi5p6n17xp1p31ve76h2' name='merged_mapping_viewership' table='[public].[merged_mapping_viewership]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[date]' />
              <expression op='[date (merged_mapping_viewership)]' />
            </expression>
            <first-end-point object-id='cleaned_advertising_data_436142F9E841466686B4FFBB5D01B000' />
            <second-end-point object-id='merged_mapping_viewership_24E816929DDF4EEA8550D9609C14AD96' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Avg CPM Revenue and Impressions per Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_advertising_data (Qwest-Database)' name='federated.17g974r09nl49t0zjg7ov03so0o5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.17g974r09nl49t0zjg7ov03so0o5'>
            <column caption='Total Viewership Hours' datatype='real' name='[Calculation_1439181592454574080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[total_viewership_seconds] / 3600' />
            </column>
            <column-instance column='[cpm]' derivation='Avg' name='[avg:cpm:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Cpm' datatype='real' name='[cpm]' role='measure' type='quantitative' />
            <column caption='Impressions' datatype='integer' name='[impressions]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Revenue' datatype='real' name='[revenue]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1439181592454574080]' derivation='Sum' name='[sum:Calculation_1439181592454574080:qk]' pivot='key' type='quantitative' />
            <column-instance column='[impressions]' derivation='Sum' name='[sum:impressions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[revenue]' derivation='Sum' name='[sum:revenue:qk]' pivot='key' type='quantitative' />
            <column caption='Total Viewership Seconds' datatype='integer' name='[total_viewership_seconds]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17g974r09nl49t0zjg7ov03so0o5].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:impressions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:Calculation_1439181592454574080:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.17g974r09nl49t0zjg7ov03so0o5].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.17g974r09nl49t0zjg7ov03so0o5].[Longitude (generated)]' field-type='quantitative' max='43359617.286595538' min='-18078764.953659859' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.17g974r09nl49t0zjg7ov03so0o5].[Latitude (generated)]' field-type='quantitative' max='13079063.164944679' min='-11024014.935377389' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:impressions:qk]' palette='red_green_gold_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='satellite' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes _.fcp.Layers.true...customization-axis='layer'>
          <_.fcp.Layers.true...pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:country:nk]' />
            </encodings>
          </_.fcp.Layers.true...pane>
          <pane _.fcp.Layers.true...generated-title='cleaned_advertising_data.Country' id='0' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.17g974r09nl49t0zjg7ov03so0o5].[Multiple Values]' />
              <lod column='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:country:nk]' />
              <lod column='[federated.17g974r09nl49t0zjg7ov03so0o5].[avg:cpm:qk]' />
              <geometry column='[federated.17g974r09nl49t0zjg7ov03so0o5].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3953038454055786' />
              </style-rule>
            </style>
          </pane>
          <_.fcp.Layers.true...pane generated-title='cleaned_advertising_data.Country (2)' id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:revenue:qk]' />
              <lod column='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3733149766921997' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-color' value='#75a1c7' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-halo' value='true' />
                <format attr='halo-color' value='#4e79a7' />
              </style-rule>
            </style>
          </_.fcp.Layers.true...pane>
        </panes>
        <rows>([federated.17g974r09nl49t0zjg7ov03so0o5].[:Measure Names] * [federated.17g974r09nl49t0zjg7ov03so0o5].[Latitude (generated)])</rows>
        <cols>[federated.17g974r09nl49t0zjg7ov03so0o5].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D68A39F8-BFCA-4292-B739-A5773D4F19E3}' />
    </worksheet>
    <worksheet name='Hours'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Monthly Hours Watched by Channel</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_advertising_data (Qwest-Database)' name='federated.17g974r09nl49t0zjg7ov03so0o5' />
          </datasources>
          <datasource-dependencies datasource='federated.17g974r09nl49t0zjg7ov03so0o5'>
            <column caption='Total Viewership Hours' datatype='real' name='[Calculation_1439181592454574080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[total_viewership_seconds] / 3600' />
            </column>
            <column caption='Channel (Merged Mapping Viewership)' datatype='string' name='[channel (merged_mapping_viewership)]' role='dimension' type='nominal' />
            <column caption='Date (Merged Mapping Viewership)' datatype='date' name='[date (merged_mapping_viewership)]' role='dimension' type='ordinal' />
            <column-instance column='[channel (merged_mapping_viewership)]' derivation='None' name='[none:channel (merged_mapping_viewership):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1439181592454574080]' derivation='Sum' name='[sum:Calculation_1439181592454574080:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date (merged_mapping_viewership)]' derivation='Month-Trunc' name='[tmn:date (merged_mapping_viewership):qk]' pivot='key' type='quantitative' />
            <column caption='Total Viewership Seconds' datatype='integer' name='[total_viewership_seconds]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' field='[federated.17g974r09nl49t0zjg7ov03so0o5].[tmn:date (merged_mapping_viewership):qk]' value='#333333' />
            <format attr='title' class='0' field='[federated.17g974r09nl49t0zjg7ov03so0o5].[tmn:date (merged_mapping_viewership):qk]' scope='cols' value='Month' />
            <encoding attr='space' class='0' field='[federated.17g974r09nl49t0zjg7ov03so0o5].[tmn:date (merged_mapping_viewership):qk]' field-type='quantitative' major-origin='#2021-08-31 12:00:00#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' data-class='subtotal' field='[federated.17g974r09nl49t0zjg7ov03so0o5].[tmn:date (merged_mapping_viewership):qk]' value='*mmm yy' />
            <format attr='font-size' data-class='subtotal' scope='rows' value='8' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.17g974r09nl49t0zjg7ov03so0o5].[tmn:date (merged_mapping_viewership):qk]' value='*mmm yy' />
            <format attr='font-size' scope='rows' value='8' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.17g974r09nl49t0zjg7ov03so0o5].[tmn:date (merged_mapping_viewership):qk]' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:channel (merged_mapping_viewership):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:Calculation_1439181592454574080:qk]</rows>
        <cols>[federated.17g974r09nl49t0zjg7ov03so0o5].[tmn:date (merged_mapping_viewership):qk]</cols>
      </table>
      <simple-id uuid='{DEAE77D4-5326-4129-8D0E-9BF2372C7E39}' />
    </worksheet>
    <worksheet name='Impressions'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Monthly Impressions by Channel</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_advertising_data (Qwest-Database)' name='federated.17g974r09nl49t0zjg7ov03so0o5' />
          </datasources>
          <datasource-dependencies datasource='federated.17g974r09nl49t0zjg7ov03so0o5'>
            <column caption='Channel' datatype='string' name='[channel]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Impressions' datatype='integer' name='[impressions]' role='measure' type='quantitative' />
            <column-instance column='[channel]' derivation='None' name='[none:channel:nk]' pivot='key' type='nominal' />
            <column-instance column='[impressions]' derivation='Sum' name='[sum:impressions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.17g974r09nl49t0zjg7ov03so0o5].[tmn:date:qk]' scope='cols' value='Month' />
            <encoding attr='space' class='0' field='[federated.17g974r09nl49t0zjg7ov03so0o5].[tmn:date:qk]' field-type='quantitative' major-origin='#2022-05-17 12:00:00#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.17g974r09nl49t0zjg7ov03so0o5].[tmn:date:qk]' value='*mmm yy' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:channel:nk]' />
              <text column='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:channel:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:impressions:qk]</rows>
        <cols>[federated.17g974r09nl49t0zjg7ov03so0o5].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{7229C69F-F215-4C72-AC2C-5D66ABF97D96}' />
    </worksheet>
    <worksheet name='Operators'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Monthly Hours Watched by Operator</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_advertising_data (Qwest-Database)' name='federated.17g974r09nl49t0zjg7ov03so0o5' />
          </datasources>
          <datasource-dependencies datasource='federated.17g974r09nl49t0zjg7ov03so0o5'>
            <column caption='Total Viewership Hours' datatype='real' name='[Calculation_1439181592454574080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[total_viewership_seconds] / 3600' />
            </column>
            <column caption='Date (Merged Mapping Viewership)' datatype='date' name='[date (merged_mapping_viewership)]' role='dimension' type='ordinal' />
            <column-instance column='[operator (merged_mapping_viewership)]' derivation='None' name='[none:operator (merged_mapping_viewership):nk]' pivot='key' type='nominal' />
            <column caption='Operator (Merged Mapping Viewership)' datatype='string' name='[operator (merged_mapping_viewership)]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1439181592454574080]' derivation='Sum' name='[sum:Calculation_1439181592454574080:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date (merged_mapping_viewership)]' derivation='Month-Trunc' name='[tmn:date (merged_mapping_viewership):qk]' pivot='key' type='quantitative' />
            <column caption='Total Viewership Seconds' datatype='integer' name='[total_viewership_seconds]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.17g974r09nl49t0zjg7ov03so0o5].[tmn:date (merged_mapping_viewership):qk]' scope='cols' value='Month' />
            <encoding attr='space' class='0' field='[federated.17g974r09nl49t0zjg7ov03so0o5].[tmn:date (merged_mapping_viewership):qk]' field-type='quantitative' major-origin='#2021-08-31 12:00:00#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.17g974r09nl49t0zjg7ov03so0o5].[tmn:date (merged_mapping_viewership):qk]' value='*mmm yy' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:operator (merged_mapping_viewership):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:Calculation_1439181592454574080:qk]</rows>
        <cols>[federated.17g974r09nl49t0zjg7ov03so0o5].[tmn:date (merged_mapping_viewership):qk]</cols>
      </table>
      <simple-id uuid='{2DD71F95-2683-4824-9B0B-F0ACA4369C89}' />
    </worksheet>
    <worksheet name='Revenue'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Monthly Revenue by Channel</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_advertising_data (Qwest-Database)' name='federated.17g974r09nl49t0zjg7ov03so0o5' />
          </datasources>
          <datasource-dependencies datasource='federated.17g974r09nl49t0zjg7ov03so0o5'>
            <column caption='Channel' datatype='string' name='[channel]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column-instance column='[channel]' derivation='None' name='[none:channel:nk]' pivot='key' type='nominal' />
            <column caption='Revenue' datatype='real' name='[revenue]' role='measure' type='quantitative' />
            <column-instance column='[revenue]' derivation='Sum' name='[sum:revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.17g974r09nl49t0zjg7ov03so0o5].[tmn:date:qk]' field-type='quantitative' max='#2022-10-31 14:15:30.889#' min='#2021-10-21 17:01:46.646#' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:revenue:qk]' field-type='quantitative' max='29953.935146718304' min='-2691.5337799381323' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:channel:nk]' />
              <text column='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:channel:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:revenue:qk]</rows>
        <cols>[federated.17g974r09nl49t0zjg7ov03so0o5].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{8B7560EF-12D8-40E1-AEAA-ABF0CE0DB6B4}' />
    </worksheet>
    <worksheet name='Revenue per Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_advertising_data (Qwest-Database)' name='federated.17g974r09nl49t0zjg7ov03so0o5' />
          </datasources>
          <datasource-dependencies datasource='federated.17g974r09nl49t0zjg7ov03so0o5'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column caption='Revenue' datatype='real' name='[revenue]' role='measure' type='quantitative' />
            <column-instance column='[revenue]' derivation='Sum' name='[sum:revenue:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:region:nk]' />
              <groupfilter function='member' level='[none:region:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.17g974r09nl49t0zjg7ov03so0o5].[none:region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='496' />
            <format attr='cell-h' value='496' />
            <format attr='cell' value='62' />
            <format attr='cell-q' value='310' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:country:nk]' />
              <wedge-size column='[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:revenue:qk]' />
              <size column='[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:revenue:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{56CDE6F8-032B-4B92-9656-D476E835129C}' />
    </worksheet>
    <worksheet name='Session Hours per Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Session Hours per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_advertising_data (Qwest-Database)' name='federated.17g974r09nl49t0zjg7ov03so0o5' />
          </datasources>
          <datasource-dependencies datasource='federated.17g974r09nl49t0zjg7ov03so0o5'>
            <column caption='Total Viewership Hours' datatype='real' name='[Calculation_1439181592454574080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[total_viewership_seconds] / 3600' />
            </column>
            <column caption='Country (Merged Mapping Viewership)' datatype='string' name='[country (merged_mapping_viewership)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country (merged_mapping_viewership)]' derivation='None' name='[none:country (merged_mapping_viewership):nk]' pivot='key' type='nominal' />
            <column-instance column='[region (merged_mapping_viewership)]' derivation='None' name='[none:region (merged_mapping_viewership):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1439181592454574080]' derivation='Sum' name='[pcto:sum:Calculation_1439181592454574080:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Region (Merged Mapping Viewership)' datatype='string' name='[region (merged_mapping_viewership)]' role='dimension' type='nominal' />
            <column caption='Total Viewership Seconds' datatype='integer' name='[total_viewership_seconds]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:region (merged_mapping_viewership):nk]'>
            <groupfilter function='level-members' level='[none:region (merged_mapping_viewership):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.17g974r09nl49t0zjg7ov03so0o5].[none:region (merged_mapping_viewership):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='688' />
            <format attr='cell-h' value='688' />
            <format attr='cell' value='86' />
            <format attr='cell-q' value='430' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:country (merged_mapping_viewership):nk]' />
              <wedge-size column='[federated.17g974r09nl49t0zjg7ov03so0o5].[pcto:sum:Calculation_1439181592454574080:qk]' />
              <text column='[federated.17g974r09nl49t0zjg7ov03so0o5].[pcto:sum:Calculation_1439181592454574080:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.88955801725387573' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ffffff' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A0BE6D4C-9FBD-4603-9C39-479179C0FB9B}' />
    </worksheet>
    <worksheet name='Sheet 11'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_advertising_data (Qwest-Database)' name='federated.17g974r09nl49t0zjg7ov03so0o5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.17g974r09nl49t0zjg7ov03so0o5'>
            <column caption='Total Viewership Hours' datatype='real' name='[Calculation_1439181592454574080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[total_viewership_seconds] / 3600' />
            </column>
            <column-instance column='[cpm]' derivation='Avg' name='[avg:cpm:qk]' pivot='key' type='quantitative' />
            <column caption='Country (Merged Mapping Viewership)' datatype='string' name='[country (merged_mapping_viewership)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Cpm' datatype='real' name='[cpm]' role='measure' type='quantitative' />
            <column caption='Impressions' datatype='integer' name='[impressions]' role='measure' type='quantitative' />
            <column-instance column='[country (merged_mapping_viewership)]' derivation='None' name='[none:country (merged_mapping_viewership):nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Revenue' datatype='real' name='[revenue]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1439181592454574080]' derivation='Sum' name='[sum:Calculation_1439181592454574080:qk]' pivot='key' type='quantitative' />
            <column-instance column='[impressions]' derivation='Sum' name='[sum:impressions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[revenue]' derivation='Sum' name='[sum:revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[unique_viewers]' derivation='Sum' name='[sum:unique_viewers:qk]' pivot='key' type='quantitative' />
            <column caption='Total Viewership Seconds' datatype='integer' name='[total_viewership_seconds]' role='dimension' type='ordinal' />
            <column caption='Unique Viewers' datatype='integer' name='[unique_viewers]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.17g974r09nl49t0zjg7ov03so0o5].[Longitude (generated)]' field-type='quantitative' max='22642650.069846254' min='-11374401.864032099' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.17g974r09nl49t0zjg7ov03so0o5].[Latitude (generated)]' field-type='quantitative' max='16212202.459648967' min='-9505233.619686937' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:revenue:qk]' value='C1033%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:unique_viewers:qk]' palette='green_gold_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.17g974r09nl49t0zjg7ov03so0o5].[avg:cpm:qk]' palette='brown_10_0' symmetric='false' type='interpolated' />
            <encoding attr='color' field='[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:impressions:qk]' palette='gray_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes _.fcp.Layers.true...customization-axis='layer'>
          <_.fcp.Layers.true...pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </_.fcp.Layers.true...pane>
          <pane _.fcp.Layers.true...title='Viewership Hours per Country' id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:Calculation_1439181592454574080:qk]' />
              <lod column='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:country (merged_mapping_viewership):nk]' />
              <geometry column='[federated.17g974r09nl49t0zjg7ov03so0o5].[Geometry (generated)]' />
            </encodings>
          </pane>
          <_.fcp.Layers.true...pane hidden='true' id='5' selection-relaxation-option='selection-relaxation-allow' title='Unique Viewers per Country'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:unique_viewers:qk]' />
              <lod column='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:country (merged_mapping_viewership):nk]' />
              <geometry column='[federated.17g974r09nl49t0zjg7ov03so0o5].[Geometry (generated)]' />
            </encodings>
          </_.fcp.Layers.true...pane>
          <_.fcp.Layers.true...pane hidden='true' id='6' selection-relaxation-option='selection-relaxation-allow' title='Avg CPM per Country'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17g974r09nl49t0zjg7ov03so0o5].[avg:cpm:qk]' />
              <lod column='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:country:nk]' />
              <geometry column='[federated.17g974r09nl49t0zjg7ov03so0o5].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </_.fcp.Layers.true...pane>
          <_.fcp.Layers.true...pane id='7' selection-relaxation-option='selection-relaxation-allow' title='Impressions per Country'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:impressions:qk]' />
              <lod column='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:country:nk]' />
              <geometry column='[federated.17g974r09nl49t0zjg7ov03so0o5].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='196' />
              </style-rule>
            </style>
          </_.fcp.Layers.true...pane>
          <_.fcp.Layers.true...pane id='4' selection-relaxation-option='selection-relaxation-allow' title='Revenue per Country'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:revenue:qk]' />
              <lod column='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#b07aa1' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ffffff' />
                <format attr='size' value='5.5472970008850098' />
                <format attr='mark-transparency' value='178' />
              </style-rule>
            </style>
          </_.fcp.Layers.true...pane>
        </panes>
        <rows>[federated.17g974r09nl49t0zjg7ov03so0o5].[Latitude (generated)]</rows>
        <cols>[federated.17g974r09nl49t0zjg7ov03so0o5].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{630B3D9D-C863-441D-9384-D3013A0EDC4B}' />
    </worksheet>
    <worksheet name='Top10_Imp'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Countries by Total Impressions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_advertising_data (Qwest-Database)' name='federated.17g974r09nl49t0zjg7ov03so0o5' />
          </datasources>
          <datasource-dependencies datasource='federated.17g974r09nl49t0zjg7ov03so0o5'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Impressions' datatype='integer' name='[impressions]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[impressions]' derivation='Sum' name='[sum:impressions:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([impressions])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;South Korea&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Puerto Rico&quot;</bucket>
              <bucket>&quot;Guadeloupe&quot;</bucket>
              <bucket>&quot;Andorra&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;San Marino&quot;</bucket>
              <bucket>&quot;Martinique&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Gibraltar&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Aland Islands&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Wallis and Futuna Islands&quot;</bucket>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>&quot;Venezuela&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Taiwan&quot;</bucket>
              <bucket>&quot;Syria&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;St. Pierre and Miquelon&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;Saint-Martin&quot;</bucket>
              <bucket>&quot;Russia&quot;</bucket>
              <bucket>&quot;Reunion&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Palestine&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;North Macedonia&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;New Caledonia&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Monaco&quot;</bucket>
              <bucket>&quot;Moldova&quot;</bucket>
              <bucket>&quot;Mayotte&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Liechtenstein&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Kosovo&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Jersey&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Isle of Man&quot;</bucket>
              <bucket>&quot;Iran&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Hong Kong&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Guernsey&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Greenland&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;French Polynesia&quot;</bucket>
              <bucket>&quot;French Guiana&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;DR Congo&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Curacao&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
              <bucket>&quot;Congo Republic&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Cabo Verde&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Bonaire, Saint Eustatius and Saba&quot;</bucket>
              <bucket>&quot;Bolivia&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.17g974r09nl49t0zjg7ov03so0o5].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.17g974r09nl49t0zjg7ov03so0o5].[none:country:nk]</rows>
        <cols>[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:impressions:qk]</cols>
      </table>
      <simple-id uuid='{A50641F9-BD80-41B2-A061-7A885EFCFDC9}' />
    </worksheet>
    <worksheet name='Unique Viewers per Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_advertising_data (Qwest-Database)' name='federated.17g974r09nl49t0zjg7ov03so0o5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.17g974r09nl49t0zjg7ov03so0o5'>
            <column caption='Country (Merged Mapping Viewership)' datatype='string' name='[country (merged_mapping_viewership)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country (merged_mapping_viewership)]' derivation='None' name='[none:country (merged_mapping_viewership):nk]' pivot='key' type='nominal' />
            <column-instance column='[region (merged_mapping_viewership)]' derivation='None' name='[none:region (merged_mapping_viewership):nk]' pivot='key' type='nominal' />
            <column caption='Region (Merged Mapping Viewership)' datatype='string' name='[region (merged_mapping_viewership)]' role='dimension' type='nominal' />
            <column-instance column='[unique_viewers]' derivation='Sum' name='[sum:unique_viewers:qk]' pivot='key' type='quantitative' />
            <column caption='Unique Viewers' datatype='integer' name='[unique_viewers]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:region (merged_mapping_viewership):nk]'>
            <groupfilter function='member' level='[none:region (merged_mapping_viewership):nk]' member='&quot;Europe&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.17g974r09nl49t0zjg7ov03so0o5].[none:region (merged_mapping_viewership):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='336' />
            <format attr='cell-h' value='336' />
            <format attr='cell' value='42' />
            <format attr='cell-q' value='210' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:country (merged_mapping_viewership):nk]' />
              <wedge-size column='[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:unique_viewers:qk]' />
              <size column='[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:unique_viewers:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4172928333282471' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F783B99C-379A-41B9-84E8-6D579193D5F7}' />
    </worksheet>
    <worksheet name='Viewers'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Monthly Unique Viewers by Channel</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_advertising_data (Qwest-Database)' name='federated.17g974r09nl49t0zjg7ov03so0o5' />
          </datasources>
          <datasource-dependencies datasource='federated.17g974r09nl49t0zjg7ov03so0o5'>
            <column caption='Channel (Merged Mapping Viewership)' datatype='string' name='[channel (merged_mapping_viewership)]' role='dimension' type='nominal' />
            <column caption='Date (Merged Mapping Viewership)' datatype='date' name='[date (merged_mapping_viewership)]' role='dimension' type='ordinal' />
            <column-instance column='[channel (merged_mapping_viewership)]' derivation='None' name='[none:channel (merged_mapping_viewership):nk]' pivot='key' type='nominal' />
            <column-instance column='[unique_viewers]' derivation='Sum' name='[sum:unique_viewers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date (merged_mapping_viewership)]' derivation='Month-Trunc' name='[tmn:date (merged_mapping_viewership):qk]' pivot='key' type='quantitative' />
            <column caption='Unique Viewers' datatype='integer' name='[unique_viewers]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.17g974r09nl49t0zjg7ov03so0o5].[tmn:date (merged_mapping_viewership):qk]' field-type='quantitative' major-origin='#2021-08-31 12:00:00#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.17g974r09nl49t0zjg7ov03so0o5].[tmn:date (merged_mapping_viewership):qk]' scope='cols' value='Month' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.17g974r09nl49t0zjg7ov03so0o5].[tmn:date (merged_mapping_viewership):qk]' value='*mmm yy' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:channel (merged_mapping_viewership):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:unique_viewers:qk]</rows>
        <cols>[federated.17g974r09nl49t0zjg7ov03so0o5].[tmn:date (merged_mapping_viewership):qk]</cols>
      </table>
      <simple-id uuid='{3F711A8B-07E4-4F83-A472-05CC0E202F29}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='2000' maxwidth='1800' minheight='2000' minwidth='1800' preset-index='8' sizing-mode='fixed' />
      <datasources>
        <datasource caption='cleaned_advertising_data (Qwest-Database)' name='federated.17g974r09nl49t0zjg7ov03so0o5' />
      </datasources>
      <datasource-dependencies datasource='federated.17g974r09nl49t0zjg7ov03so0o5'>
        <column-instance column='[region (merged_mapping_viewership)]' derivation='None' name='[none:region (merged_mapping_viewership):nk]' pivot='key' type='nominal' />
        <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
        <column caption='Region (Merged Mapping Viewership)' datatype='string' name='[region (merged_mapping_viewership)]' role='dimension' type='nominal' />
        <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='21100' id='3' name='Session Hours per Country' w='24333' x='611' y='1350' />
        <zone h='9050' id='4' name='Session Hours per Country' param='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:region (merged_mapping_viewership):nk]' type-v2='filter' w='10000' x='25444' y='1500' />
        <zone h='21050' id='9' name='Unique Viewers per Country' w='17167' x='35833' y='1350' />
        <zone h='8800' id='10' name='Unique Viewers per Country' param='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:region (merged_mapping_viewership):nk]' type-v2='filter' w='8889' x='53444' y='1350' />
        <zone h='1900' id='12' name='Unique Viewers per Country' pane-specification-id='0' param='[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:unique_viewers:qk]' type-v2='size' w='13778' x='38000' y='18050' />
        <zone h='21050' id='13' name='Revenue per Country' w='20944' x='63222' y='1350' />
        <zone h='7850' id='14' name='Revenue per Country' param='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:region:nk]' type-v2='filter' w='8889' x='84778' y='1350' />
        <zone h='1900' id='16' name='Revenue per Country' pane-specification-id='0' param='[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:revenue:qk]' type-v2='size' w='14333' x='66444' y='18750' />
        <zone h='31600' id='19' name='Sheet 11' w='99056' x='389' y='26950' />
        <zone h='3800' id='20' name='Sheet 11' pane-specification-id='2' param='[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:Calculation_1439181592454574080:qk]' type-v2='color' w='7778' x='91056' y='48750' />
        <zone h='3800' id='21' name='Sheet 11' pane-specification-id='5' param='[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:unique_viewers:qk]' type-v2='color' w='7778' x='91000' y='52900' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1600' minheight='1600' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='23' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='99200' id='22' param='vert' type-v2='layout-flow' w='99112' x='444' y='400'>
                <zone h='9050' id='4' mode='checkdropdown' name='Session Hours per Country' param='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:region (merged_mapping_viewership):nk]' type-v2='filter' w='10000' x='25444' y='1500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='21100' id='3' is-fixed='true' name='Session Hours per Country' w='24333' x='611' y='1350'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8800' id='10' mode='checkdropdown' name='Unique Viewers per Country' param='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:region (merged_mapping_viewership):nk]' type-v2='filter' w='8889' x='53444' y='1350'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='21050' id='9' is-fixed='true' name='Unique Viewers per Country' w='17167' x='35833' y='1350'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='1900' id='12' name='Unique Viewers per Country' pane-specification-id='0' param='[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:unique_viewers:qk]' type-v2='size' w='13778' x='38000' y='18050'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7850' id='14' mode='checkdropdown' name='Revenue per Country' param='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:region:nk]' type-v2='filter' w='8889' x='84778' y='1350'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='21050' id='13' is-fixed='true' name='Revenue per Country' w='20944' x='63222' y='1350'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='1900' id='16' name='Revenue per Country' pane-specification-id='0' param='[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:revenue:qk]' type-v2='size' w='14333' x='66444' y='18750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='31600' id='19' is-fixed='true' name='Sheet 11' w='99056' x='389' y='26950'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3800' id='20' name='Sheet 11' pane-specification-id='2' param='[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:Calculation_1439181592454574080:qk]' type-v2='color' w='7778' x='91056' y='48750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3800' id='21' name='Sheet 11' pane-specification-id='5' param='[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:unique_viewers:qk]' type-v2='color' w='7778' x='91000' y='52900'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C8DBBA99-7538-46E7-B990-3392828BA9CF}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Hours'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:channel (merged_mapping_viewership):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17g974r09nl49t0zjg7ov03so0o5].[none:channel (merged_mapping_viewership):nk]</field>
            <field>[federated.17g974r09nl49t0zjg7ov03so0o5].[none:channel:nk]</field>
            <field>[federated.17g974r09nl49t0zjg7ov03so0o5].[tyr:date:qk]</field>
            <field>[federated.17g974r09nl49t0zjg7ov03so0o5].[yr:date (cleaned_viewership_data):ok]</field>
            <field>[federated.17g974r09nl49t0zjg7ov03so0o5].[yr:date (merged_mapping_viewership):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D615F598-4F1D-4A5E-88FF-EB93FC6B8563}' />
    </window>
    <window class='worksheet' name='Viewers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:channel (merged_mapping_viewership):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17g974r09nl49t0zjg7ov03so0o5].[none:channel (merged_mapping_viewership):nk]</field>
            <field>[federated.17g974r09nl49t0zjg7ov03so0o5].[yr:date (merged_mapping_viewership):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{22A43E79-3218-451E-A554-EC88BCC3CDFB}' />
    </window>
    <window class='worksheet' name='Operators'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:operator (merged_mapping_viewership):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17g974r09nl49t0zjg7ov03so0o5].[none:operator (merged_mapping_viewership):nk]</field>
            <field>[federated.17g974r09nl49t0zjg7ov03so0o5].[yr:date (merged_mapping_viewership):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3E77EEB0-B864-4B96-B750-A2EFE6369821}' />
    </window>
    <window class='worksheet' name='Impressions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:channel:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17g974r09nl49t0zjg7ov03so0o5].[none:channel:nk]</field>
            <field>[federated.17g974r09nl49t0zjg7ov03so0o5].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5E7D50B2-C62A-4130-AC33-4D7BBDB58A2A}' />
    </window>
    <window class='worksheet' name='Revenue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:channel:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17g974r09nl49t0zjg7ov03so0o5].[none:channel:nk]</field>
            <field>[federated.17g974r09nl49t0zjg7ov03so0o5].[tyr:date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8E6954C3-105F-404C-B0A5-F813B630FE69}' />
    </window>
    <window class='worksheet' name='Top10_Imp'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17g974r09nl49t0zjg7ov03so0o5].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DF111D2A-57E7-4622-8CB8-3A9EAACC7AAF}' />
    </window>
    <window class='worksheet' name='Session Hours per Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='title' />
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:region (merged_mapping_viewership):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:country (merged_mapping_viewership):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17g974r09nl49t0zjg7ov03so0o5].[none:country (merged_mapping_viewership):nk]</field>
            <field>[federated.17g974r09nl49t0zjg7ov03so0o5].[none:region (merged_mapping_viewership):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{135C8458-2080-4A00-91ED-BFC56C32A833}' />
    </window>
    <window class='worksheet' name='Unique Viewers per Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:region (merged_mapping_viewership):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:country (merged_mapping_viewership):nk]' type='color' />
            <card pane-specification-id='0' param='[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:unique_viewers:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17g974r09nl49t0zjg7ov03so0o5].[none:channel (merged_mapping_viewership):nk]</field>
            <field>[federated.17g974r09nl49t0zjg7ov03so0o5].[none:country (merged_mapping_viewership):nk]</field>
            <field>[federated.17g974r09nl49t0zjg7ov03so0o5].[none:region (merged_mapping_viewership):nk]</field>
            <field>[federated.17g974r09nl49t0zjg7ov03so0o5].[none:total_viewership_seconds:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5C65E612-0176-41A4-9A19-0C6C8EDE9C31}' />
    </window>
    <window class='worksheet' name='Revenue per Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:region:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:country:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:revenue:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17g974r09nl49t0zjg7ov03so0o5].[none:country:nk]</field>
            <field>[federated.17g974r09nl49t0zjg7ov03so0o5].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9A0911BA-4E7B-4497-A5BC-E850D1C73EA7}' />
    </window>
    <window class='worksheet' name='Avg CPM Revenue and Impressions per Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='41'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:impressions:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:revenue:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17g974r09nl49t0zjg7ov03so0o5].[none:country (merged_mapping_viewership):nk]</field>
            <field>[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:impressions:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{427C46E2-5B3E-42D8-9EAE-F6D527509D2E}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Revenue per Country'>
          <highlight field='[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:revenue:qk]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Session Hours per Country'>
          <highlight field='[federated.17g974r09nl49t0zjg7ov03so0o5].[none:country (merged_mapping_viewership):nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 11'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Unique Viewers per Country'>
          <highlight field='[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:unique_viewers:qk]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='19' />
      <simple-id uuid='{80B672AA-7E30-4614-BC51-C679D82A1D0C}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='161'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:Calculation_1439181592454574080:qk]' type='color' />
            <card pane-specification-id='5' param='[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:unique_viewers:qk]' type='color' />
            <card pane-specification-id='6' param='[federated.17g974r09nl49t0zjg7ov03so0o5].[avg:cpm:qk]' type='color' />
            <card pane-specification-id='4' param='[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:revenue:qk]' type='size' />
            <card pane-specification-id='7' param='[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:impressions:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17g974r09nl49t0zjg7ov03so0o5].[avg:cpm:qk]</field>
            <field>[federated.17g974r09nl49t0zjg7ov03so0o5].[sum:Calculation_1439181592454574080:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{A69C607A-5CF2-4E82-8D19-108A44B9FF3E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Avg CPM Revenue and Impressions per Country' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      AKJwu4my71K7AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Hours' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Impressions' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Operators' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Revenue' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Revenue per Country' width='192'>
      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
      A+BjNmfmWQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Session Hours per Country' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2deXRc133fP2/2DTODATAAiB0kNoIgKIggRUq0ZEqW7VJulDpWHMc+StN4
      qds6iZ2cUzcniWM358Rx45OeOkuTOrbjWLGc2I5siRIpiZJIWlxF7PtGEjswGzD7zJv3+gcI
      ECAAYiEAEnjv8w8HM3fuu294v+9uv0WQZVlGRUWhaO53A1RU7ieqAFQUjSoAFUWjCkBF0agC
      UFE0qgBUFI0qABVFowpARdGoAlBRNKoAVBSNKgAVRaMKQEXRqAJQUTSqAFQUjSoAFUWjCkBF
      0agCUFE0qgBUFI0qABVFowpARdGoAlBRNKoAVBSNKgAVRaMKQEXRqAJQUTSqAFQUjSoAFUWj
      CkBF0agCUFE0qgBUFI0qABVFowpARdGoAlBRNKoAVBSNKgAVRaMKQEXRqAJQUTSqAFQUjSoA
      FUWjCkBF0agCUFE0qgBUFI0qABVFowpARdGoAlBRNKoAVBSNKgAVRaMKQEXRqAJQUTSqAFQU
      je5+N2AnEw6H+fnPf05lZSUVFRX89Kc/paioiMHBQdLS0piYmODQoUNUVlai1WqXrUeWZYLB
      IGlpaQiCgMfjweFwMDU1hd1uJxgMYrfb0Wq1aDTqM20tCLIsy/e7ETuViYkJwuEw4+PjlJSU
      EI1GaWlpYd++fQwMDBCNRkkmkxQWFlJXV7dsPZIkcfr0aR5//HFSqRRnz57FbDYTiURIJBJM
      T09TW1tLTU3NXYWkshjtV77yla/c70Y8yPh8Pq5evYpWq+X06dMUFxczPj7O66+/TkFBAT/7
      2c9IpVL09/eTSCRwuVxz3zWZTFy+fJk9e/ZgMplobGyktraWjo4OampqcLvdWCwWLBYLGRkZ
      y7ZBEARSqRQOh4NEIoEgCPh8PvLz89FqtdhsNkZGRvB4PBQXF2/Br7JzUEeAVdDY2IgoipSU
      lODz+QgEAhQXF3P16lW8Xi81NTVcv34dURQ5fvw46enpG3r9VCrF6dOnKSgoYNeuXXR3d1Ne
      Xk5XVxdVVVWIokgoFEKr1VJQULCh197pqAJYgYmJCV577TVqamro7e3lscceIxQK0dzczN69
      e2lpaeH48eP4/X46Ojo4fPgw2dnZi+qR4h6kpJ9UqBtZToKURAx1A6Az7cHUZJwp6HSCzTbz
      OstN1JaGeQ2CGhoaoru7m/e///2MjIzQ2dlJeXk5vb29ZGZmYrFYsFqt5OTk3PNvsxNQBbAJ
      yGKYVGyYVKgLMdhNKtIPsghyasnyOst+LL8wL/nZP0syXT09lFVU8IFH6zHZ0zGnZ6I3WZYs
      f+nSJRwOB263m56enrnpUX5+Pt3d3aRSKWw2G08++aS6XkDdBdowZFkiFRkg6btE0n8JUuF7
      r9RgIOjxkUgksBr1+PraZ94XBGzuPNJy8knLKUCjvf3fKMsyTU1NPPbYY3OvCwoKaG5u5sSJ
      E7S3t9PY2EgkEiEtLe3e27jNUUeAe0RKBkiMv0oy8B5yMrCuOpYdAdzZfOXcORKJBM9+8P3Y
      pejiMoJAWnY+6cXlWFzudV1fyagjwDqREn4SE6dJeM+CFN+Ua3hEEVEUQRBwWM3IwSUEIMsE
      xwYJjg2RXlKB35VLuTsbjSBsSpt2GqoA1sjME/81Et5zm9bxZwlLEpIkkZmVhU6Mk7xraZmW
      UJRvnv0xBwsK+dW6g1Tn5C4qNTU1RXNzM+Xl5aSnp9PQ0MDevXvp6OigsrKSyclJ3G43NpsN
      QQEiUgWwSmRZIul5m/j4yXVPddZKb2hmHZGft4tk9O5rCoMjg5cHhwG4OniT94YGeWbvPj5e
      d5B0y+0Fs81mIzc3l2g0isPhQKPR0N4+s7Y4efIkOp2O/Px86urqMBgMm3RnDw7qufkqSMXG
      ifR+k9jQC1vW+REEgokEAE7r0jtE87lhstM9OTH3tyzL/Lythf/6ry9y4Xo/s0s9jUaDx+Oh
      qKiIVCqF0WgkkUhgNBopLS0lPz8fj8dDQ0PD5tzXA4Y6AqzA+PUz2BKXSYV7t/bCej0jAS8A
      uzIcEJ1atqg5PZN/7R9Y8jN/NMLXTr3KszW1PH/oEQxaLVVVVSQSCSKRCFNTU1RXV9PW1sbB
      gwdJJpN4vV6ysrI25bYeNFQBLIMkiXRe+AY3239EcflxdjmNmz7nn0/CasPX2YXd4cCske86
      /+/SmBnw+e5a37+1NNE5PsbvP/kBch0OALKysuY6+rFjxwAwm83Y7fYNuYftgDoFWoJ41EvT
      mS9zo+2fkeUUN/rOEUwtPt3dTFJGI5FwmIKCAqREbNlyGpOFk8Ojq6qzc2KcL//8JbonJlYu
      rBBUAdxBNDTKxZ89z1j/qbn3JDFGT+d5JH3elrWjNxQCZub/qWRi2XL9WvOCuf9KTISCfOml
      H/PuQN89t3EnoApgHrHwBJdf+TSRqZuLPouGxui7OQS6rZkeSMYZ26Ds9OWvpzNZOD8dWXPd
      KUni62++zrsD/etu305BFcAtoqFRLr38m0t2/lkmhq7gCdtB2Hwbml6PBwCX3bpsmSmnm+ax
      1U1/7iSZSvFnb5ziF/3KHgl2zCJYlmVee+01jhw5wqlTpygpKeHgwYOcOXMGg8FAPB4nkUgw
      Pj5OfX09lZWV6PV6ACQpyZWTn7tr55+lt+MUaYc+ijHRuXk3YzAw7QuQX1iIGPQvWURnsnDa
      E0CUpHVfRpQkvv7maf7c+h+ovGXB2traSnNzM88++yyhUIjW1lacTifd3d2kp6ej1+vJy8uj
      oqJi3dd9kNgxI4AgCFRUVBCPx9m7dy+yLKPRaHC73VRWVuJ2uzlw4ADZ2dn09fVx7do1YGa3
      p+nM/yAcWHob8U5SyTA9XVeQtK6VC68Xi5Uxr5fcrAwkcen9n7Arh3MbMIURJYk/e+MUo1Mz
      26zRaJRjx47h8/lwu924XK65E+GsrCyi0SjXrl3Dt8Ku03ZhxwhAkiTa29sZGRlhdHSUjIwM
      xsbG6O3tZXx8nJ6eHoLBILW1tVRUVGC5dTra1/D3Cxa8q2HK08GgRwSNaTNuBb9GQzQSXnb+
      rzdbeWlk43ZyJkJBfvDeZaSURH5+Pk1NTZjNZm7cuEF3dzeCIGCz2SgrK6O2thaXy7VjTokV
      bQ3qHbnC5Vc+DfL6phH7Dn4Ch3DvB2R3WoOOZmTyV2fP8vETT6GLTS8qH3QX8tWGZlL3MP2Z
      RQCOl5bxYTkHd34mmVW5oAAboFl2zAiwVpLxKa6d/p11d36AjsZ/I2ms3MBWzdAbDJGWloZF
      t7gj6kxmTnunNqTzawWBz+07zDPhTNzuNGQhwM2B1U0FdwqKFIAspWg99zXERPCe6kmJEfr6
      2pG1jg1q2QxBMUlRcTGJ0GLzB6/ByoUb1+/5GlkWG39c+ziVAT151Zl097/Ht77zHb7/nW8T
      Ct7b77KdUKQAPMOXGOs/vSF1eUevMjplBEG/IfUBjEVj5GYu9gMWNFpOB8JI9zhrrXJl8YdF
      h8kR9eyqy+alMyd5+dw5kskE4VCI0ydfuaf6txOKE0BKjNF27qsbWudAx8uEhNINqUvOyGBk
      eAinefEi029L58Lw8LrrNmi1PFtUxX+27yUjy4YvfpNv/p+/pK2zY0G5qxcvMNC7xcZ/9wnF
      CWC4+yWioZENr7et4adIhnsPSSIZTWi1WszahU95jU5Hm7T+YxuTTscXqg7zAW02u/Znc67h
      HV58+WWi0SW8zIAzp0+hhP0RRQkgJcbpbfj7TalbTITovTkC2nszlegLhXA6nQjiHfY/mbs4
      2duzrjp3p2fwJ2WPUWVMR8qM89d/9y0uXrl81w7e19NNvwJGAUUJYLDzx8TDm2cJOTl4gfGw
      nXv5WaeTIruys0glbpteCxoNbwfjRJN3d4q8E40g8MGiMn4v/2HyCzPpnmjluy/8AF9gdU49
      b7726pqutx1RjADEZITrzf+46dfpa32JqK583d8fi8XIueMATHDn81rf2p7GVoOBT5Xs57ms
      crROiR/+y3c59frrpERx1XXcGOinr7t7TdfdbmxbAYiiyFtvvUUwGCSVSvHWW2/h8/m4du0a
      09PTXL58mcnJyblhfqz/9U2Z+9+JLKfoaj8LxnWsB4wmRgMBcl23BaDR6jgbShBbw9O/1JXJ
      F0vqOZ5byGBihO++8D0GR9Z+77Isc/6dtwCIRCK0tLQQiUR48803SSaTRKNR3nzzTcbGxnj9
      9dfp7++nvb2diW3kb7BtjeFGR0cpKSmhtbWVgoICioqK6OjoQKfTMTk5SVdXF36/n/r6etLT
      0zds23M1hKeu0z9cRGm2DVKh1X9Rr8Oa7iQRvn36m7CkcWoNc/GHc/J5Pncv9kwrL7/6E3rW
      uW6Ypberi2gkglarJZFI0NHRQXl5OdevX2dqaoqKigomJiYIhUJ0dXURiUSwWCw88cQTmM0r
      +zLfb7btCGAymWhtbUWv1yNJ0tzrvr4+LBYLDz/8MJIk0d3dTTI+zeTguS1t3+jAO3jjawtU
      FUqzYzUaEGO3d2bOxSTCieUdYmbRazR8fE8NX9h9kLgxwne+/3/vufPDTGDelsZGYrEYnZ2d
      xONxGhsb0Wq1aLVampqaEEURg8FAeXk55eXl+P1+hu9hu3Yr2ba2QLNJI6xWK7IsE41GMZvN
      TE9PYzab0ev1iKKITqdjtOclWs/9yZa3UaM18NDBZzBJQ3ctN2sL5MnMotuoxXVr1BDtGfxR
      1wCxFebtWTYbnys/SHlmJm++e5rGq1c37B4Ayioq+eR/+q253zsej2OxWBAEgXA4jNlsJhwO
      Y7fbkSSJeDyO2WzeFsk6tu0USBCEBc7bs3Eu58fn1+lmbq+ffFwH/wi9/z28N99GTG5A3M5V
      IKUS9PS2sH9vDXLs7iIAGAiHSUtLhyggCJwNJ1bs/LW5eXwitwqLVeD7L/4DE+NjG9T62/T1
      dDMVCJB5y4HeeMtbDZj7P3A6ncBM2JXZ3307sH1auk7CiThXxqdIpqxohSeoOPgxLOFu0hPX
      CQ29vekL42lvD9dHCyjOtCKvEDBXtlqxamQSgNaZxVudd7f3/5WqWp7J20NDx1XOnnlj0w6u
      JEni5sDAnAB2EttSAB6Ph97eXg4fPozX66W3t5fCwkK6u7vJy8vD6XSi0+lIT09nPDhNMjUT
      ljwlS7RPjAMOdJqHyCl7jFyND1u0H3HiIiFvN7K8+m3C1TLU9zZO56/iEO7ufmjKzCQxNTNS
      tKJfdu5v1uv5rZp6qtMc/NvJF7nev/m+vQN9vdQdOrTp19lqtqUANBoNkiQRi8XQarWIokhz
      czNFRUVcv36dUChEXl4e9fX1tI6MohW0pJvN2M0mJoJBQok4oiQxNB1kCD1QQUZuHXnFSUzT
      zdhjA/hHLpISlw9HsiZkic7mlzl85KMQaV+6jDOdUDCAS5bRZ2TzysDS7pkFaQ5+/8j7Ge3p
      5Ls/+SGx2Aa1cQUG+vqQZXnHxQvdlgIYGBjAbrcjyzIDAwM4HA5yc3NpaWnh0UcfpaOjg87O
      TqqqqmgeHZ6LfmDRG8i2p5HvcGIxGkg3m5mOx4iLSbyRMN4IQCVmSw176j+JJdSBPdbP1ODb
      JGJL++auFjERpL3jMtXlZcjxxY7sol6P3aSHMLQJJkamFptCP7Wngo8VlfPOW6/S0dq6pbY6
      Pq9ny661lWzLXaCxsTF8Ph+5ubnE43G8Xi+5ubkEg0Hy8vJIpVJMTEyQn5/PJ7//XfzR5UOH
      5DuduCxW3DYbdrMJq9HATb9vzuTYoNWSn2bDFhsgKzVEbOwXhAPX1932ksoPscsZhdTtrU6d
      ZT+h/t0EbVqQRL425GMitNAm//OHH6MoJXP6tZ/j9dyfzviZ//YFikt335drbxbbcgTIyclZ
      kONq9vXsDpBOp6OgoIC4KBK5S1ApgKFAgKF5tjECULMrD5fFgsVgwGzQMZUQGYi5kHGRU/wY
      eboQhsA1TOFepiaakFIr79PPcr3rdWwPPYNdu9AKU+/KIBUYpEGftqDzp1ss/PFTH6Tl7bf5
      58uXVn2dzSC4Ax1ltqUAVkuvZ5L4GmxfAGSgeeT2IY5BqyXH7iDf6STNaERAYDBpxSc8jM11
      hJxdn8QebMIW6ycwchFphXWDLKfo6fwFD9d/CCK37Wx0dity1Mypec7u+3fl8XxlNa+/8ALD
      Q4Nruo/N4EZ/PzW1B+53MzaUHS2AjSCRSnHT7+Om/3YYEJvRSIkrA61dy7TBQsByiKSxjqyc
      X8Mc6sA23YQY6Fp2izUW8dDd00JlaQFSfAL0OpIiNMs6xoJBDFodH91fS67Pzz/9zV8pwi7/
      frGjBVAWv84/Zs14O8UEA12a29OmLm0OcWbcGEdiImOxW1ulkkRgGSeRWULxOC2jI7SMznRw
      o05HgTOdLJsNh7mEjOxqnIV6tJEbWKab0E53EvR2Ic/LEjk50owjPY9sqw4EDaJWx6ujE1gN
      Bj5bd5Ab777LmQfMEnN6iYX5dmdHC0Aefg/jjbcBMALzd7HnvxbMLgTzjA9uUmtiIrtk7rMh
      IR2vMJO3NyQY6dPctu9pGhkmJUnERZFezyS9nsm5z7JsNvIcTrJsxygue5ayhyQ8A6exRPrw
      jlwCZAa63sJ19NfRyRKXfAEcZgu/4s7h/AsvkFiF/c9WM77OMIwPMjtaAKtFjvqQozNTHC2Q
      O9k299niLFu30eYfglspSoc0LrzC7TiezRorshyAYIBL3lFOpTTU5T+GzfEkmcWfJTvRSXL8
      Ar3dV6g5+KsEEiL10yHOn91aoz2lowrgHkgNXZ57nctCseybX9DkQNCZYAqSRgfhtGKMOh1p
      xgwofQZD1uOUNL3JuBjmoaqF24wiGhLy+ozKeru61r5+EAT0xqUj3hkNxiXf386oAtgKYlPI
      zMyfdaFxHN6ZuX0q/xjGjFq6x3vJlgpx5aQzPHaNwe6Nyc9Vso5ILRqNloz8zCU/s6UvnZ1+
      O6MK4D4gpOVC7i/jN1ZjHvEwEusi3ZqPYVRPnu0RSk4c5Xrfuwz1NCOlUitXuIFIUorJm0vb
      FiViUUZGRrh06RIf+tCH8Pv9XL58merqalpbW+cS72VmZlJSUrJkHQ8aD77B9j2g3fXQ/W7C
      InRlHyKR+giDkUKS0TjxeACPHKLfcB0EkCWZ+HCKQtcxHn36M+SWbnzoxfWSXVTG8PAwR48e
      ZWxsjOHhYY4cOUJjYyNHjx5ldHSU0dFRGhoamNomO0Y7WgDoH6AhW29GU/UZ/G9IDDtLiGfm
      4BCDhAOTeGN+rngvYUi7PfdORhIkRmVKsz9A/RO/TlbBxgTeuhf0RiMul4t33nkHg8GAzWbj
      3Llz7N69m3feeYdjx45RWVk5Z6i4HdjRUyBBs/mZXFaDZlc9onSUwAu/IPDhX2Ziz36qX/oH
      oh9+HG0yykhojJv+60zke3BO2xZ8V4wm0UTT2Lvnl0hU++lqOoNvdOVEHpuBoNGye/dudu+e
      Wajn5eVRVVUFQF1dHTDjIFNevv6oGFvNjh4BtLn7QX8fHbNNDnT7P0eovZDp1y8xdeKjdFU9
      QtUb/4K2oozQlAezMxN/ZCYfcKe0fNaZmD+KNGaitvo5jnz4N8jML96im7jNrj1VW37NzWZH
      CwBAY8tZudAmoM1/BDn3c3hfbCU5PEr081+kteIw9V3vIvX1kiwrQJZSxAWR2C37oYbANXT2
      uyeeiHhCSGNmDjz0a+x/9CNY7M6tuB0ArI5NzIpzn9j5AsjYYvNdrRF9/W8Tnagj8MNXkUWR
      yGd/m0tCBvtj4wg/+wmG+jqC3hnf3bhJRyQx4yrpi3jxOlcRtU2WCQ76sUTzOXTkNznw+LOY
      0zY2RPtSOLO3Lk3sVrHzBZBdvXXXyqpCU/s1vD9sIXzuPBqrleh/+RIXhUyKLWD/9rcAiJfu
      Qr6VmMMbW5hr627ToDuRJZnoeARzJI/H/90XOPj0c5smhIy8ok2p936z4wWgy6/f/ItoDegf
      +o8kpGfw/u0PSHk8aGw2Ip/7HS7hwmHSUPKT7yIFgxjq6wgnbgfLCmgX2vxcG7+KNXttAXal
      ZAp/1yR6fxZHj3+a8oOPo9VtXL4CgJySih3nDgkKEIAmY/ecodum1O/ei+Hxb+B/ZYLgyVMg
      ywgWy0zn12SiEQRqW88htTQhGAwkq0rhlnmC3mJjbHqhgZkv4mXS6l1XW6RkitCNEFm6/Tz1
      sd+j4vATGyaEnNKdkRb1TrbdNmj3LRPhUCiE3+/n+PHjNDQ00NfXx65du5AkCVEUyc3Nxel0
      kpOTgyargtTNixvbEI0eQ/2nSQSKGP/G9+CW483sk/8iGcgyPBS8ieaVlwDQHahhWr4d9dlg
      sTExvTiOT1O0iaPaQ8ip9eUBE2NJAh1+3GkHKPqVR7jRf5G+xguI8yJOrwWd3kBmfgnvvvsu
      PT09PP/881y5coUbN25gMplwu9309vZSVFREZWUlGRkZ67rO/WDbjQAlJSUkk0lSqRQ228ye
      +f79+ykqKkKSJDo7Z+bQnZ2dNDU1IUkS+v3PbWgbNFkVmP793xN4w4f/H38w1/kFq2VuwSsD
      RYRx/fQHcCuwbepAJbJ027RBa9EzvUQWyGZvI6ac5TPEr5ZEMMZUZ4Bs00N86Pn/Tl7Z+tZD
      BXsPYHWkU1FRwSOPPAJAZmYmFouFjIwMJicnKS0tZXJykvPnz99zu7eSbTcCdHR00NbWRn5+
      PsFgEK/XSyQSoby8nJGREYqKiqirq2NwcJDOzk5kWUa3+6mZU+Hk8s7xq8Vw+HOIUg1jX/tb
      5Mjt+jRWK5HPf5GLsgtZBrtWpvylf0IcH5/53pHDBO7o7BZ7Dtd9i+1uPOFJbuYPksXGbHHG
      p6NMXolSuecZyg88SU/L2wx1Nq/6+3vqjgIzSbT37NmDx+NhdHQUh8OBVqslMzOT3bt3U1hY
      SF/f3WMfPWhsy6gQ6yH62pcRO36+7u8LziKMj36JqVdbiVy6DPPSlGpstpknvyYTSZ5Js/tE
      yxvw2kyyOcFggE/+MmFxoQD1e3L4w4v/e8nrHc4/ygf9T5JKbHCgLgGsbju6bInWC68y2tsx
      tyO1FEaLlee+/Bfod6ApNGzDKdB60e15ap3fFNAf+ATamj9g8q9fJnLh4oLOP3/BK916lNQF
      rs91fpiZ+0ekhfNvjU6PR17e66tx7BrarE3Ixi5DeHya6bYI+2s/ylOf+l2yCpc/K8mvqNmx
      nR+UJIDd70eTvW/lgvMQ7HmYnvkWsbFSJr/514hjCxesGpuN6Oe/yEUy5jp/qTaK4wfz8pDp
      dIg1ZQvm/jCT9C4SW363Jy7GuK65sab2rgU5JeHvnWC6JUJd/Sc4+ku/seigS9BoOPDkL21a
      Gx4EFCMAQdBgPPzZ1ZZGv++jGB7/S7zfe4Ppl3624KkPt+b88xa8ABlmLUX/8u0FawNDXS0R
      cbGTvUYv0Be4e8TojmQHessmjALzkWUCfZMI42k8+vRnOPaxT2PPzAag9MAjOLLujynJVrHt
      FsH3grbkGJrsfUjjrcuWEZyFmJ74A6K9Ufx/+D/n9uznc+eCF8CgFaj8xSvQP28RqNWSrK1A
      ji8OKKU324hN3d1kuGmsgWfLniXZ47truY1AjCXxtIyiM5l44iO/jTfQTW7ZzjN+uxPFjAAA
      gkaHof63lvsQ3Z6nMD7x5/h+eA7/t/9h6c4/74R39lMBqBrtwvDOGwvK3nnqOx9R9nIjNLnk
      Z7NEkxH6hesr3NXGIsaSjDfcxGkuxZ6xtgw32xFFCQBAX/bUTDSH+RhsmD78deRdn2LsT75J
      rGnpLcKlFrwABQk/Wa/8COa5L9556nsnmlUmkWiYeg+9dZOnQXeg0WtxlmaRTCZpampClmVE
      UaSxsZFEIkFTUxM+n4/h4eFtHy5RcQIAMD7+e6CZ6YC6PU9h+eRLTL0xgOcbf4G8jCfTUgte
      gAy9TNWbPyblXbig1R2oISIvf/IaMcgMT60c7rBp9Bri0j7qm0ZGRQ7GNNNc5x8ZGaGhoQGN
      RsPJkyeRJIkzZ87Q2NhIe3s7qS32W95IFLUGmEXr3ovx2JcQzE4kTRnjX/0G4vDymWIWLHjn
      dX69Bh5qfptEW9vCLwjCzKnvEqe8AHqzlYSwuv39RCpBv9BPCfmrKn+vGB1mMvfuWvCeJElz
      4VVmcwQcOHAAj8dDd3c32dnZFBcXb0n7NhpFjgAAhrpPEbthYPyrf7py5//8F7l4x7QH4FDo
      JqlXfra47kfqCS3T+QG0RhOt4y2rbuvVwFVMWxCSRNBqyHukFI12plvU1tai0WhwOp3U1NQg
      yzInTpxAo9FQUlLCvn37OHz4MHl529dPYMeNAGNjY4yPj7N//37Gx8cZGxsjOzubiYkJDAYD
      WVlZaDQaXC4XpgO1CC/+CHmZWKCzJ7wXcS2aylcZExj/5u+4c4Yv6PUk95bc1ewiJU+jN6St
      +p56JjuR92ng3nJ0rEjOgULMrts+yXq9nv3798/9XVtbCzD3ns1m21b+v0ux40aAvr4+EokE
      sViM/v5+EokE7e3txONxWltbOX/+PD09PciyjD4nB9dnPr1kPfMXvHd2/myrjl0v/j/k8OKk
      d7qH9hNJ3d3qUpLjjKyQt2A+MjJdcjeCZvPs8e0FLlzl2ZtW/4PKjhOAKIr4/X7i8fjca1mW
      CQQCPP3007hcLnp7e4neeupbHjmM89c/saCO5Ra8AGa9hsp3X0FaKgm1Xoe4b/Gp750kxJE5
      P+DV0uht2LRpkDXbTt4j9z/syv1gx02BDh06RCQSwWAwUF9fTyQSwWKxEIlEsFqtHDlyhMrK
      SszmmWgRgiBg/8gzxNrbiTU0LrvgnaVmsgfNm6eXvLbhoVqmpLuHVkcQsDh20dPz+pruq3Oi
      HWmvAOvzlVkWrUnHrkOlaHQPRgiZrWbHCcBsNs917tm/5/8L4HYvPuDJ+t3fIfDDF5msPsgl
      XIue/ADlmjBpL34PSVrCevIup77z0Wi0iJKfxBrSKgGkJJEOqZPd2sJ1O8rciSqjMLIAAAbJ
      SURBVM6kp+h4JQbbzjV2W4kdNwVaL4LBgPNTn2TIkbtk53fpZYpf+j7SMgc/dzv1nY/eZiOI
      joS4du+ss8NvY8vZGKf32c5vcjxA0fPuA4oQgN/vn3OlnH0dDoe5du0a/f39BINBpqenEQSB
      95U6yHMsPHnVaQTqGt4g2dW1ZP2CwUDiLqe+89HoNPimB0nJaz88Gp0eZjptZZGthNakUzv/
      LRQhgNbWVjweD/F4nLa2NiYnJzl16hR2u53Ozk7eeusthoeHZ7zHNAJP7nHycP7t7cD6QB+p
      N04tW7/uQA3Ru5z6zieFH59mfdHqJFmiOd58T7tB1mw7Zc8cUDv/LRQhAJg5zUylUsiyjCRJ
      6HQ62tvb2bdvHxaLhWvXrs0FdBUEgX05Vo6V2KnWR7H+6PsgLvPEFgTE2ooVd35mScR8BFcx
      VVqOa+NXMbttKxdcgvQ9bgrfV45Wr8wF71LsuEXwUtTU1ODz+YjH43OvDxw4wODgINnZ2bjd
      7rkIB/MpzTBTkDDiSUsjFVg6YpvhcD2BFRa+80mkJvFqls7AshpGpoaIlYuwOJjEsghaDXmH
      S3EUzURr8Pl8tLa2Ul1dTVtbG+973/vo7e2lra2Nxx57jNOnT1NVVUU4HCY7O5s9e/asu70P
      OooQgNPpxOl0LvgbYO/evXPvVVQsHfdGn5tLzp9+jakf/4Tpl19ZaPGp15OsLoXk4gOxpdDo
      9IhikHDq3p7ArZEW9puqEGPJFcta3GnkHd69YKfH5XJht9vJyMjAbp8JwhWPx4lEIrS0tBCN
      RhEEAY/Hw9jYGC6Xay4J+U5DEQK4VwSDAeevfRzzwYME/ukHxG8thnV1tUynVtj3n4fOaEan
      deEZ7b2n9lwdvszR3EcIDHiWLaPRa8k9WIy9wDVn2zPL+Pg4LS0tGAwGWlpacDqdyLKM1Wol
      IyOD6elpioqKsFqtdHR0bGtrz5VQTFSIjUKWZSIXLxI8+RrJY3WLIj3cDXNGOt7YRf7XjcZ7
      bscf1H8FGhcvvLUGHa6KbDLKc9Aa1OfbSqi/EDPR5lpbWzlx4gRXr17F5/NRXV2Nx+MhGAxi
      MpnIy8ujuLgYQRCwHjmC9cgRgmODJLtbSIRWlw4olQozpdkY55bWaCu1xipS8VsR6QxaMsqy
      yajMVTv+GlB/KWbmxKWlpej1etLT0+nq6sLtdjM9PU1mZiY3btxgdHSUnJycBQvltJwC0nIK
      mB65QXDsJuHJMaTU8nb+SWkSb3hjbBnO9JzmWMlRYoEIjsIMHCVZ6Izqf+daUX8xZkaAaDTK
      +Pg4JpOJkpISRkZG6O3t5emnn8bhcNDe3o5Wu/Ti1b6rCPuuIiQxSWhiGP+NHuLBKSRx4SI1
      JYfRpO+BifVHT9NpdGRYMzle9kFspRnkmkt2ZNTmrUJdA2wSYiJOfNpPxDdBNOAlEZ7GH32V
      C/pMLo4uH5XiTvRaPZXuvWTZsqnKrmZPVgXZaTs7VMlWogpgi5j9mYcCN/FGvCRTCTrG2xaV
      22XPI9M2Y6xXllmOxWBd9gk/NDTE+fPnOXjwIGazmXPnzpGXl8fIyAhutxuv10tFRQU1NTWb
      d2PbHFUAG0AiMWPZaTAY5l7PIkkSBoMBWZaXnUKtl87OThwOB+Pj41gsFux2+9w+fnZ29lzg
      4L179y4481C5jboG2ADOnDlDKpXixIkTc681Gg2iKBIKhcjJyaG2tnbVh0ler5fz58+ze/du
      qqureeWVV6ioqKC5uRm32000GqW4uJiioiLOnj1LXV0dgiBw9epVampqaGtro6ysjMLCQoaH
      h3fsIdZGoI4AG8CFCxeQJIlHH32UCxcuLIigYDKZGB4eJhqN8txzz616wfree+9RU1PDxMQE
      Z86cwe128/DDD3PlyhUSiQSCILB//35KSko289Z2POoIsAE4nU4kScLj8ZCenj43AsiyTG5u
      LkVFRfT3L84DsBySJGG1WkmlUgiCQGFhIQ6Hg/Pnz3PkyBHC4TBDQ0NLO+aorAl1BFBRNIox
      h1ZRWQpVACqKRhWAiqJRBaCiaFQBqCgaVQAqikYVgIqiUQWgomhUAagoGlUAKopGFYCKolEF
      oKJoVAGoKBpVACqKRhWAiqJRBaCiaFQBqCgaVQAqikYVgIqiUQWgomhUAagoGlUAKopGFYCK
      olEFoKJoVAGoKBpVACqKRhWAiqJRBaCiaFQBqCgaVQAqikYVgIqiUQWgomhUAagoGlUAKopG
      FYCKolEFoKJoVAGoKBpVACqKRhWAiqJRBaCiaFQBqCgaVQAqikYVgIqiUQWgomhUAagoGlUA
      KopGFYCKovn/ZRaSI1IMvjUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 11' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top10_Imp' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Unique Viewers per Country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Viewers' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
